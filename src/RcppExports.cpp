// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace arma;

// CptC
List CptC(mat Y, int K, int d, int numiter, double a_psi, double b_psi);
RcppExport SEXP _ABACUS_CptC(SEXP YSEXP, SEXP KSEXP, SEXP dSEXP, SEXP numiterSEXP, SEXP a_psiSEXP, SEXP b_psiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type numiter(numiterSEXP);
    Rcpp::traits::input_parameter< double >::type a_psi(a_psiSEXP);
    Rcpp::traits::input_parameter< double >::type b_psi(b_psiSEXP);
    rcpp_result_gen = Rcpp::wrap(CptC(Y, K, d, numiter, a_psi, b_psi));
    return rcpp_result_gen;
END_RCPP
}
// CptCinit
List CptCinit(mat Y, int K, int numiter, double a_psi, double b_psi, List init, bool useInit);
RcppExport SEXP _ABACUS_CptCinit(SEXP YSEXP, SEXP KSEXP, SEXP numiterSEXP, SEXP a_psiSEXP, SEXP b_psiSEXP, SEXP initSEXP, SEXP useInitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type numiter(numiterSEXP);
    Rcpp::traits::input_parameter< double >::type a_psi(a_psiSEXP);
    Rcpp::traits::input_parameter< double >::type b_psi(b_psiSEXP);
    Rcpp::traits::input_parameter< List >::type init(initSEXP);
    Rcpp::traits::input_parameter< bool >::type useInit(useInitSEXP);
    rcpp_result_gen = Rcpp::wrap(CptCinit(Y, K, numiter, a_psi, b_psi, init, useInit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ABACUS_CptC", (DL_FUNC) &_ABACUS_CptC, 6},
    {"_ABACUS_CptCinit", (DL_FUNC) &_ABACUS_CptCinit, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_ABACUS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
